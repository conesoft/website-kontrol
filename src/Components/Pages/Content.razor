@page "/content"
@using Conesoft.Tools
@using System.Diagnostics
@using System.Text.RegularExpressions
@using System.Net
@using Conesoft_Website_Kontrol.Tools

<PageTitle>Content Kontrol</PageTitle>

<main>
    @foreach (var entry in Entries.Take(50))
    {
        <section>
            <h2>@WebUtility.HtmlDecode(entry.Name)</h2>
            <a href="@entry.Url" target="_blank">@entry.Url.CleanUrl()</a>
            @if (string.IsNullOrWhiteSpace(entry.ImageFilename) == false)
            {
                <img src="/content/feeds/thumbnail/@entry.ImageFilename">
            }
            <p>@FastEntryDecoder.DecodeDescription(entry)</p>
        </section>
    }
</main>

@code {
    static Conesoft.Files.Directory Storage = Conesoft.Hosting.Host.GlobalStorage / "FromSources" / "Feeds" / "Entries";

    public List<Entry> Entries { get; set; } = new List<Entry>();

    public record Entry(string Name, string Url, DateTime Published, string Description, string Category, string Filename)
    {
        public string? ImageFilename => Storage
            .Filtered($"{Filename}.*", false)
            .Where(f => !f.Extension.EndsWith("json"))
            .FirstOrDefault()?.Name ?? null;
    }

    protected override async Task OnInitializedAsync()
    {
        var loadedEntries = await Storage.Filtered("*.json", allDirectories: false).Where(f => f.Info.CreationTime > DateTime.Today.AddDays(-1)).ReadFromJson<Entry>();
        var entries = loadedEntries.NotNull().Select(e => e.Content).OrderByDescending(e => e.Published);
        Entries = entries.ToList();
    }
}