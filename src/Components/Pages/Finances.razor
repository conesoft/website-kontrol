@page "/finances"

@using Conesoft_Website_Kontrol.Components.Controls.Finances
@using Conesoft.Hosting

@inject HostEnvironment environment

@implements IDisposable

@rendermode InteractiveServer

<PageTitle>Finances Kontrol</PageTitle>

<main class="fit-screen">
    <AuthorizeView Roles="Family">
        <Authorized>
            <List id="list" Entries="@Entries" />
            <OpenAmount id="compensation" Entries="@Entries" />
            <AddNewEntry id="form" />
        </Authorized>
    </AuthorizeView>
</main>

@code {
    Conesoft.Files.Directory Storage => environment.Local.Storage / "Finances";
    CancellationTokenSource? cts;

    List<Controls.Finances.Entry> Entries { get; set; } = new();

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            cts = Storage.Live(async () =>
            {
                Entries = (await Task.WhenAll(Storage.Files.Where(f => f.Extension == "json").Select(async f =>
                {
                    var entry = await f.WhenReady.ReadFromJson<Controls.Finances.Entry>();
                    if (entry != null)
                    {
                        entry.PathToFile = f.Path;
                    }
                    return entry;
                }))).NotNull().ToList();
                await InvokeAsync(StateHasChanged);
            });
        }
    }

    public void Dispose() => cts?.Cancel();
}